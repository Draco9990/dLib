--> Before compiling fix all todos in value editors

--> hue shifting an image, editing saturation and lightness too
--> root element add Elementproperty in an array for users to declare custom events
    -> Method binding new static property that invokes one of the events
--> add timer to delayed actions

--> Add percentage padding but in a smart way
-> instead of haivng it request element width/height, instead change it so that it accepts methods to 'modify' the final element x, y, widht, height.

--> calculate width and height and pos once per in render, and cache for everyone else there

--> when dragging elements, it drags ALL elements that are hovered, hjover in general seems to be affecting more than just top layer?
    -. Could just be caused by images being clickthrough tho
-. button at the top bar is half half? Also the hierarchy editor same issues
    --. works fine when just a button tho in hierarchy editor, so it seems text buttons are kinda werid
    -> a horizontal scrollbar might be eneded for the verticalbox
    -> Maybe make scrollbars components? And itemboxes would rely on those then? not sure if possible to add scrollbar AFTER inting the itembox

--> add reference element with borders
--> add ability to swap between two views, whole screen, or focus on the ref element
    -> to achieve this override Settings.xScale and Settings.yScale, or add a new scaleFactor to the UIElement or smth
--> zoom in zoom out ability somehow? --> Zoom component
--> Canvas element that has child with inerted dragging

-- particle sim

--> properties initializer for first time running intellij plugin with project

--> Listbox have scrollbar start at top after loading pages?

Gridbox with parent itemsbox, isolate listbox stuff like scrollbar
Radio button with linkedlist
Buy tarot cards and chair and drainer and brush and camera
Screen properties tab for background properties plus say the spire

--> add box with arrows
-- fix listbox theme
--> make screen editor a custom theme

-- sync configs

--> cursor hide between acts
-> composites delete button override
--> add themes
-> listbox textbox expose as textlable
--> add a consumer pass and rename to listener
--> say the spire pass
--> allow elements do delcare themselves as standalone selectables

-- add unbind from parent dimensions, add onParentMoved and onParentResized

--> add update children first check for scrollboxes

-- collect properties & data through recursive reflection

--> replace texture with texturebinding

rework renderable

-- horizontal list box, move swap into that, also add delete
-- position docking that just changes the result of getLocalPosition by offset??
-- width and height set to fill?

Overlay interaction key, localisation, listbox store active item when setting/removing items
Listbox filter and onfiltercompsrison method and listener
DraggableCanvas

rework themes
rework loading and dispose so textures are manually managed
list box item padding